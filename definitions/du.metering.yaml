openapi: 3.0.1
info:
  title: UiPath.DocumentUnderstanding.Metering.Api
  version: v1
paths:
  /alive:
    get:
      tags:
        - Metering
      summary: Checks if the service is operating properly and can connect to its redis dependency.
      description: "This route returns basic information about the services health.\r\nIt is also used as liveness probe."
      operationId: alive
      responses:
        "200":
          description: Success
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /ping:
    get:
      tags:
        - Metering
      summary: Basic ping route which returns status code 200 when the web server is up and running
      description: "This route returns basic information about where the metering service is deployed.\r\nIt is also used as readiness probe."
      operationId: ping
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
  /track:
    post:
      tags:
        - Metering
      summary: License validation, tracking and consumption
      description: "The operation supports two types of authentication (API key or JWT token with account id).\r\nCalls License Accountant to consume specified number of units\r\n\r\nHeaders (API key auth):\r\n- X-UIPATH-License: API key\r\n\r\nHeaders (JWT bearer token auth):\r\n- Authorization: Bearer token...\r\n- X-UIPATH-Internal-AccountId: account-id set by the location services"
      operationId: track
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConsumptionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumptionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ConsumptionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConsumptionRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConsumptionResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumptionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ConsumptionResponse'
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "413":
          description: Client Error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "429":
          description: Too Many Requests
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - APIKey: []
        - BearerToken: []
  /validate:
    post:
      tags:
        - Metering
      summary: License validation without consumption
      description: "Validates the given API key or JWT bearer token and returns whether the provided account still has units available.\r\n\r\nHeaders (API key auth):\r\n- X-UIPATH-License: API key\r\n\r\nHeaders (JWT bearer token auth):\r\n- Authorization: Bearer token...\r\n- X-UIPATH-Internal-AccountId: account-id set by the location services"
      operationId: validate
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - APIKey: []
        - BearerToken: []
components:
  schemas:
    ConsumptionRequest:
      required:
        - customDimensions
        - leaseId
        - modelName
        - productName
      type: object
      properties:
        productName:
          minLength: 1
          type: string
          description: Product name
        leaseId:
          minLength: 1
          type: string
          description: "The lease id, provide the same lease id when retrying a consumption in\r\norder to make the call idempotent"
        deploymentType:
          type: string
          description: "Deployment type hash\r\n- On-Prem (AIFLite) = cea575677c47839fde1e59dbfc9ad5bb\r\n- On-Cloud (Public endpoints) = 8b58bf7c935aaafcbe4901a82b9653a4\r\n- AIF-Cloud = 9977625b82bcc2c3bbdf2ad1fc005f4a\r\n- AIF-K8S On-Prem = 915bd254419ea13c81a0c5dbc44674d3\r\n- Service Fabric = 5b2df7017788e02f63e803e2724ab60b"
          nullable: true
        modelName:
          minLength: 1
          type: string
          description: Model name
        modelVersion:
          type: string
          description: Model Version
          nullable: true
        customDimensions:
          type: object
          additionalProperties: {}
          description: Custom dimensions
      additionalProperties: false
      description: The request for consumption tracking
    ConsumptionResponse:
      type: object
      properties:
        accountId:
          type: string
          nullable: true
        saveImage:
          type: boolean
        leaseId:
          type: string
          nullable: true
        edition:
          type: string
          nullable: true
        actuallyConsumedUnits:
          type: number
          format: double
        correlationId:
          type: string
          nullable: true
        modelName:
          type: string
          nullable: true
      additionalProperties: false
    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
          nullable: true
        errorMessageKey:
          type: string
          nullable: true
        errorMessageParams:
          type: array
          items:
            type: string
          nullable: true
        isSuccess:
          type: boolean
          readOnly: true
        hasErrors:
          type: boolean
          readOnly: true
      additionalProperties: false
    PingResponse:
      type: object
      properties:
        location:
          type: string
          nullable: true
        serverRegion:
          type: string
          nullable: true
        clusterId:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    ValidationRequest:
      required:
        - modelName
        - productName
      type: object
      properties:
        productName:
          minLength: 1
          type: string
        modelName:
          minLength: 1
          type: string
      additionalProperties: false
    ValidationResponse:
      type: object
      properties:
        accountId:
          type: string
          nullable: true
        edition:
          type: string
          nullable: true
        licenseUnitType:
          type: string
          nullable: true
        hasUnitsAvailable:
          type: boolean
        saveImage:
          type: boolean
      additionalProperties: false
  securitySchemes:
    BearerToken:
      type: http
      description: Authorization header using the Bearer scheme
      scheme: bearer
      bearerFormat: JWT
    APIKey:
      type: apiKey
      description: API Key
      name: X-UIPATH-License
      in: header
servers:
  - url: https://cloud.uipath.com/{organization}/{tenant}/aimetering_
    description: The production url
    variables:
      organization:
        description: The organization name (or id)
        default: my-org
      tenant:
        description: The tenant name (or id)
        default: my-tenant
