openapi: 3.0.1
info:
  title: Studio Web API
  version: v1
servers:
  - url: https://cloud.uipath.com/{organization}/studio_/backend
    description: The production url
    variables:
      organization:
        description: The organization name (or id)
        default: my-org
paths:
  /api/ActivitiesMetadata/{projectId}/Workflow/{workflowId}:
    post:
      tags:
        - ActivitiesMetadata
      summary: Create or update activity metadata
      operationId: ActivitiesMetadata_CreateOrUpdateActivityMetadata
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BackendActivityMetadataDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BackendActivityMetadataDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BackendActivityMetadataDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BackendActivityMetadataDto'
      responses:
        "200":
          description: Success
    delete:
      tags:
        - ActivitiesMetadata
      summary: Delete activities metadata (by IdRef)
      operationId: ActivitiesMetadata_DeleteActivitiesMetadata
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteActivitiesMetadataCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteActivitiesMetadataCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteActivitiesMetadataCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteActivitiesMetadataCommand'
      responses:
        "200":
          description: Success
    get:
      tags:
        - ActivitiesMetadata
      summary: Gets all activitiesmetadata for a workflow
      operationId: ActivitiesMetadata_GetActivitiesMetadata
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Build/{projectId}:
    post:
      tags:
        - Build
      summary: Post a new build for a project, owned by the current user id
      operationId: Build_CreateBuildPackage
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - compilations
              type: object
              properties:
                compilations:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Compiled expressions files
                buildVersion:
                  type: string
                  description: The build version.
                  nullable: true
            encoding:
              compilations:
                style: form
              buildVersion:
                style: form
      responses:
        "200":
          description: Success
  /api/Build/{projectId}/Version/{buildVersion}:
    get:
      tags:
        - Build
      summary: Get the build of a project with a specific version, owned by the current user id
      operationId: Build_GetBuild
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: buildVersion
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: Success
  /api/Discovery:
    get:
      tags:
        - Discovery
      summary: "Get the discovery info\r\nUiPath.StudioWeb.Web.Application.Dto.DiscoveryDto"
      operationId: Discovery_GetDiscovery
      responses:
        "200":
          description: Success
  /api/Feed:
    get:
      tags:
        - Feed
      summary: Get available feeds
      operationId: Feed_GetFeeds
      responses:
        "200":
          description: Success
  /api/fre/Departments:
    get:
      tags:
        - FirstRunExperience
      summary: Get list of all departments with translation
      operationId: FirstRunExperience_GetDepartments
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: object
                additionalProperties:
                  type: string
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/fre/UserPreferences:
    get:
      tags:
        - FirstRunExperience
      summary: Get UserPreferences for a given userID. If user
      operationId: FirstRunExperience_GetUserPreferences
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserPreferencesDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferencesDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserPreferencesDto'
        "404":
          description: If a UserPreferences does not exist for a given UserId taken from HttpContext
    post:
      tags:
        - FirstRunExperience
      summary: "Creates or override UserPreferences. Overrides only those preferences that are not null.\r\nFor instance, if you want to update only connectors, then set other preferences to null or do not send them at all."
      operationId: FirstRunExperience_PostUserPreferences
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserPreferencesDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UserPreferencesDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UserPreferencesDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserPreferencesDto'
      responses:
        "204":
          description: Success
        "400":
          description: If any department has invalid name. Supports only departments taken from Departments endpoint.
  /api/Migration/{organizationId}/compatibility_report/source:
    post:
      tags:
        - Migration
      operationId: Migration_GetSourceCompatibilityReport
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Migration/{organizationId}/compatibility_report/destination:
    post:
      tags:
        - Migration
      operationId: Migration_GetDestinationCompatibilityReport
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Migration/{organizationId}/properties/source:
    get:
      tags:
        - Migration
      operationId: Migration_GetSourceProperties
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Migration/{organizationId}/properties/destination:
    get:
      tags:
        - Migration
      operationId: Migration_GetDestinationProperties
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Organization/{organizationId}/organizationserviceinstances/{serviceType}:
    delete:
      tags:
        - Organization
      operationId: Organization_DeleteOrganization
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: serviceType
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OrganizationDeleteCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDeleteCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationDeleteCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationDeleteCommand'
      responses:
        "200":
          description: Success
  /api/PartialRollout:
    post:
      tags:
        - PartialRollout
      summary: Update user status.
      operationId: PartialRollout_UpdateUserStatus
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateUserAccessStatusCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAccessStatusCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAccessStatusCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserAccessStatusCommand'
      responses:
        "200":
          description: Success
  /api/Ping:
    post:
      tags:
        - Ping
      summary: Ping to server
      operationId: Ping_Ping
      responses:
        "200":
          description: Success
  /api/Project:
    get:
      tags:
        - Project
      summary: Get all the projects owned by a user and shared with him.
      operationId: Project_GetProjects
      parameters:
        - name: userId
          in: query
          description: The id of the user
          schema:
            type: string
            description: The id of the user
            nullable: true
        - name: limit
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: skip
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: sortOrder
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderDto'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDto'
    post:
      tags:
        - Project
      summary: Create a new project, owned by the authenticated user
      operationId: Project_Create
      requestBody:
        description: The project data
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProjectCommand'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
  /api/Project/PreviewProjects:
    get:
      tags:
        - Project
      summary: Search through all the projects, in preview mode owned by a user.
      operationId: Project_GetPreviewProjects
      parameters:
        - name: searchText
          in: query
          description: The text to search by
          schema:
            type: string
            description: The text to search by
            nullable: true
        - name: u03a3
          in: query
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
        - name: connectionId
          in: query
          description: The connection id to search by
          schema:
            type: string
            description: The connection id to search by
            nullable: true
        - name: limit
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: skip
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: sortOrder
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderDto'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewProjectDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewProjectDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewProjectDto'
  /api/Project/OrganizationProjects:
    get:
      tags:
        - Project
      summary: Search through all the projects, in preview mode owned by a user.
      operationId: Project_GetOrganizationProjects
      parameters:
        - name: searchText
          in: query
          description: The text to search by
          schema:
            type: string
            description: The text to search by
            nullable: true
        - name: limit
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: skip
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: sortOrder
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderDto'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewProjectDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewProjectDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewProjectDto'
  /api/Project/{projectId}:
    get:
      tags:
        - Project
      summary: Get the project that matches the provided id.
      operationId: Project_GetProject
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: u03a3
          in: query
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
    patch:
      tags:
        - Project
      summary: Update a project, owned by the authenticated user
      operationId: Project_UpdateProject
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      requestBody:
        description: New project data
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectCommand'
      responses:
        "200":
          description: Returns a name saved to the database
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SavedNameDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SavedNameDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SavedNameDto'
    delete:
      tags:
        - Project
      summary: Delete a project, owned by the authenticated user
      operationId: Project_Delete
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      responses:
        "200":
          description: Success
    put:
      tags:
        - Project
      summary: "Replace specified project\r\nUsed by Studio Desktop to save all changes at once"
      operationId: Project_OverwriteProject
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: Acquired project lock
          required: true
          schema:
            type: string
            description: Acquired project lock
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - uploadFile
              type: object
              properties:
                uploadFile:
                  type: string
                  description: The project file.
                  format: binary
            encoding:
              uploadFile:
                style: form
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Archive:
    get:
      tags:
        - Project
      summary: Get the project archive that matches the provided id.
      operationId: Project_GetProjectArchive
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Duplicate:
    post:
      tags:
        - Project
      summary: Duplicate the project having the id projectId.
      operationId: Project_DuplicateProject
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
  /api/Project/{projectId}/Pin:
    post:
      tags:
        - Project
      summary: Set the pin date of the project having the id projectId.
      operationId: Project_AddPinToProject
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      responses:
        "200":
          description: Success
    delete:
      tags:
        - Project
      summary: Remove the pin date of the project having the id projectId.
      operationId: Project_RemovePinFromProject
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/TriggerType/{triggerType}:
    patch:
      tags:
        - Project
      summary: Update a project trigger type, owned by the authenticated user
      operationId: Project_UpdateProjectTriggerType
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: triggerType
          in: path
          description: New project trigger type
          required: true
          schema:
            $ref: '#/components/schemas/TriggerType'
      responses:
        "200":
          description: Success
  /api/Project/UserProjects:
    delete:
      tags:
        - Project
      summary: Deletes all projects created by an user (authenticated)
      operationId: Project_DeleteAllProjects
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/XamlFile/{fileId}:
    get:
      tags:
        - Project
      summary: Get a xaml file, owned by the authenticated user
      operationId: Project_GetXamlFile
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: fileId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            nullable: true
      responses:
        "200":
          description: Success
    put:
      tags:
        - Project
      summary: Update a xaml file from storage, owned by the authenticated user
      operationId: Project_UpdateXamlFile
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: fileId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            nullable: true
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      requestBody:
        description: The new file data
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateXamlFileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateXamlFileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateXamlFileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateXamlFileCommand'
      responses:
        "200":
          description: Success
      deprecated: true
  /api/Project/{projectId}/XamlFileEx/{fileId}:
    get:
      tags:
        - Project
      summary: "Get a xaml file, owned by the authenticated user\r\nIncludes extra information: JitState"
      operationId: Project_GetXamlFileEx
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: fileId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            nullable: true
        - name: x-UiPath-SW-LockKey
          in: header
          description: The lock key
          schema:
            type: string
            description: The lock key
            nullable: true
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Dependencies:
    put:
      tags:
        - Project
      summary: Updates the project dependencies.
      operationId: Project_UpdateProjectDependencies
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      requestBody:
        description: The command containing the new dependencies for the specified project.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDependenciesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDependenciesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDependenciesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDependenciesCommand'
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/XamlFileArchived/{fileId}:
    put:
      tags:
        - Project
      summary: Update a xaml file from storage, owned by the authenticated user, received as an zip archive.
      operationId: Project_UpdateXamlFileArchived
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: fileId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            nullable: true
        - name: x-UiPath-SW-LockKey
          in: header
          description: Acquired project lock
          schema:
            type: string
            description: Acquired project lock
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                jitState:
                  type: string
                  format: string
                  nullable: true
                contentsArchive:
                  type: string
                  format: binary
                  nullable: true
            encoding:
              jitState:
                style: form
              contentsArchive:
                style: form
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/UiState/{workflowId}:
    put:
      tags:
        - Project
      summary: "Update UI state for specific project/workflow. We use a zip archive because Cloudflare\r\ncan reject the request."
      operationId: Project_UpdateUiStateArchived
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: workflowId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: The lock key.
          schema:
            type: string
            description: The lock key.
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contentsArchive:
                  type: string
                  format: binary
                  nullable: true
            encoding:
              contentsArchive:
                style: form
      responses:
        "200":
          description: Success
  /api/Project/Import:
    post:
      tags:
        - Project
      summary: Imports a project for current user.
      operationId: Project_ImportProject
      parameters:
        - name: flags
          in: query
          description: Import flags in dictionary format
          schema:
            type: object
            additionalProperties:
              type: string
            description: Import flags in dictionary format
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - uploadFile
              type: object
              properties:
                uploadFile:
                  type: string
                  description: The project file.
                  format: binary
            encoding:
              uploadFile:
                style: form
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/DisableAutoUpdate:
    put:
      tags:
        - Project
      summary: Set the disable auto-update flag to false for the next X hours.
      operationId: Project_ChangeProjectAutoUpdate
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: hours
          in: query
          description: Number of hours for the auto-update flag
          schema:
            type: integer
            description: Number of hours for the auto-update flag
            format: int32
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
  /api/Project/{projectId}/Unload:
    post:
      tags:
        - Project
      summary: "This endpoint will be called through Beacon API that supports only POST requests with url and body\r\nFor now it will be used for releasing project locks but it can be used for more unload actions later"
      operationId: Project_UnloadProject
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UnloadProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UnloadProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UnloadProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnloadProjectCommand'
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/ProfileBinding:
    put:
      tags:
        - Project
      summary: Update the project with user's binding profile
      operationId: Project_ApplyUserProfileBinding
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileBindingsAppliedResult'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileBindingsAppliedResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileBindingsAppliedResult'
      deprecated: true
  /api/Project/{projectId}/Entities/{fileId}:
    get:
      tags:
        - Project
      summary: Get an entity file (archive or dll), owned by the authenticated user
      operationId: Project_GetEntityFile
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: fileId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            nullable: true
      responses:
        "200":
          description: Success
    delete:
      tags:
        - Project
      summary: Update an entity file (archive or dll), owned by the authenticated user
      operationId: Project_DeleteEntityFile
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: fileId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            nullable: true
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Entities:
    post:
      tags:
        - Project
      summary: Update an entity file (archive or dll), owned by the authenticated user
      operationId: Project_UploadEntityFile
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - uploadFile
              type: object
              properties:
                uploadFile:
                  type: string
                  description: The file.
                  format: binary
            encoding:
              uploadFile:
                style: form
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Workflow:
    post:
      tags:
        - Project
      summary: Create a new workflow file, owned by the authenticated user
      operationId: Project_CreateWorkflow
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowCommand'
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Workflow/Rename:
    patch:
      tags:
        - Project
      summary: Renames a workflow file, owned by the authenticated user
      operationId: Project_RenameWorkflow
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RenameWorkflowCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RenameWorkflowCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RenameWorkflowCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RenameWorkflowCommand'
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Workflow/{workflowId}/{parentId}:
    delete:
      tags:
        - Project
      summary: Deletes a workflow file, owned by the authenticated user
      operationId: Project_DeleteWorkflow
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
        - name: workflowId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            nullable: true
        - name: parentId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            nullable: true
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Folder:
    post:
      tags:
        - Project
      summary: Create a new workflow file, owned by the authenticated user
      operationId: Project_CreateFolder
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateFolderCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateFolderCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateFolderCommand'
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Folder/Rename:
    patch:
      tags:
        - Project
      summary: Renames a folder, owned by the authenticated user
      operationId: Project_RenameFolder
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RenameFolderCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RenameFolderCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RenameFolderCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RenameFolderCommand'
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Folder/{folderId}/{parentId}:
    delete:
      tags:
        - Project
      summary: Deletes a folder, owned by the authenticated user
      operationId: Project_DeleteFolder
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
        - name: folderId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            nullable: true
        - name: parentId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            nullable: true
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Lock/{lockKey}:
    delete:
      tags:
        - Project
      summary: Tries to release the project lock
      operationId: Project_ReleaseLock
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: lockKey
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            nullable: true
      responses:
        "200":
          description: Success
    put:
      tags:
        - Project
      summary: "Tries to lock the project 1 minute\r\nIf the project is already locked with the same key, the lock is extended"
      operationId: Project_AcquireLock
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: lockKey
          in: path
          description: The key used to lock the project
          required: true
          schema:
            maxLength: 64
            type: string
            description: The key used to lock the project
        - name: force
          in: query
          description: Force takeover if same user
          schema:
            type: boolean
            description: Force takeover if same user
            default: false
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Lock:
    put:
      tags:
        - Project
      summary: Tries to lock the project 1 minute
      operationId: Project_AcquireLock
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LockProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/LockProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/LockProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LockProjectCommand'
      responses:
        "200":
          description: Success
      deprecated: true
  /api/Project/{projectId}/Images/{fileId}:
    get:
      tags:
        - Project
      summary: Get a print screen file, owned by the authenticated user
      operationId: Project_GetPrintScreen
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: fileId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            nullable: true
      responses:
        "200":
          description: Success
    delete:
      tags:
        - Project
      summary: Update a printscreen file from storage, owned by the authenticated user
      operationId: Project_DeletePrintScreen
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: fileId
          in: path
          description: The id of the file
          required: true
          schema:
            type: string
            description: The id of the file
            nullable: true
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Images:
    post:
      tags:
        - Project
      summary: Update a printscreen file from storage, owned by the authenticated user
      operationId: Project_UploadPrintScreen
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - uploadFile
              type: object
              properties:
                uploadFile:
                  type: string
                  description: The file.
                  format: binary
            encoding:
              uploadFile:
                style: form
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/Settings:
    get:
      tags:
        - Project
      summary: Gets the project settings, owned by the authenticated user
      operationId: Project_GetProjectSettings
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
    post:
      tags:
        - Project
      summary: Updates project settings
      operationId: Project_CreateOrUpdateProjectSettings
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectSettings'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectSettings'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectSettings'
      responses:
        "200":
          description: Success
  /api/Project/{projectId}/JitState:
    get:
      tags:
        - Project
      summary: Gets the project settings, owned by the authenticated user
      operationId: Project_GetJitState
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Publish/{projectId}:
    post:
      tags:
        - Publish
      summary: Add a command to publish queue
      operationId: Publish_PublishProject
      parameters:
        - name: projectId
          in: path
          description: ""
          required: true
          schema:
            type: string
            description: ""
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - compilation
                - feed.feedId
                - feed.publishUrl
                - tenantId
                - version
              type: object
              properties:
                feed.feedId:
                  type: string
                  description: The id of the feed
                feed.publishUrl:
                  type: string
                  description: The publish url for the feed
                version:
                  type: string
                  description: The nuget version
                compilation:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Compiled expressions files
                arguments:
                  type: array
                  items:
                    $ref: '#/components/schemas/WorkflowArgumentInfo'
                  description: Arguments of the workflow
                  nullable: true
                packageDescription:
                  type: string
                  description: Package description
                  nullable: true
                tenantId:
                  type: string
                  description: The tenant id.
                iconUrl:
                  type: string
                  description: The icon URL of the published package
                  format: uri
                  nullable: true
                iconFile:
                  type: string
                  description: The file representing the icon of the published package
                  format: binary
                  nullable: true
            encoding:
              feed.feedId:
                style: form
              feed.publishUrl:
                style: form
              version:
                style: form
              compilation:
                style: form
              arguments:
                style: form
              packageDescription:
                style: form
              tenantId:
                style: form
              iconUrl:
                style: form
              iconFile:
                style: form
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    get:
      tags:
        - Publish
      summary: Gets publish history for a project
      operationId: Publish_GetPublishHistory
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: includeNonSuccessfulResults
          in: query
          schema:
            type: boolean
        - name: limit
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: skip
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: sortOrder
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderDto'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Publish/DefaultIcons:
    get:
      tags:
        - Publish
      summary: Gets default icons that can be used for a package.
      operationId: Publish_GetDefaultIcons
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/ResourceLocation/{tenantId}:
    get:
      tags:
        - ResourceLocation
      summary: Get the list tenant services based on the token and the provided tenant id.
      operationId: ResourceLocation_GetResources
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: forceUpdate
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
  /api/Results/PackagesInstalled:
    post:
      tags:
        - Results
      summary: Imported project dependencies have been restored.
      operationId: Results_ProjectPackagesRestored
      requestBody:
        description: The command used to notify that the project dependencies have been restored.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InstallDependencyCompletedCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/InstallDependencyCompletedCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/InstallDependencyCompletedCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InstallDependencyCompletedCommand'
      responses:
        "200":
          description: Success
  /api/Role/AddRoleAssignments:
    post:
      tags:
        - Role
      operationId: Role_AddRoleAssignment
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCommand'
      responses:
        "200":
          description: Success
  /api/Role/UpsertRoleAssignments:
    post:
      tags:
        - Role
      operationId: Role_UpsertRoleAssignments
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCommand'
      responses:
        "200":
          description: Success
  /api/Role:
    delete:
      tags:
        - Role
      operationId: Role_RemoveRoleAssignment
      parameters:
        - name: id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Role/GetUserRoles:
    get:
      tags:
        - Role
      operationId: Role_GetUserRoles
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDto'
  /api/Role/All:
    get:
      tags:
        - Role
      operationId: Role_GetAllRoles
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDto'
  /api/Role/RoleAssignments:
    get:
      tags:
        - Role
      operationId: Role_GetAllRoleAssignments
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          schema:
            type: integer
            format: int32
        - name: id
          in: query
          schema:
            type: string
            format: uuid
        - name: keyword
          in: query
          schema:
            type: string
            nullable: true
        - name: roleIdentifier
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EntityRolesResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRolesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EntityRolesResponse'
  /api/trigger/{projectId}:
    get:
      tags:
        - Schedule
      summary: Get schedule information by project
      operationId: Schedule_GetSchedule
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      responses:
        "200":
          description: Success
    post:
      tags:
        - Schedule
      summary: Set schedule information by project
      operationId: Schedule_SetSchedule
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      requestBody:
        description: ""
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ScheduleDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ScheduleDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScheduleDto'
      responses:
        "200":
          description: Success
  /api/Session:
    post:
      tags:
        - Session
      summary: Allocates the robot session
      operationId: Session_CreateAgentSession
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AllocateRobotSessionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AllocateRobotSessionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AllocateRobotSessionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AllocateRobotSessionCommand'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AgentSessionDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSessionDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AgentSessionDto'
  /api/Session/Designer:
    post:
      tags:
        - Session
      summary: Allocates the designer session on serverless
      operationId: Session_CreateDesignerSession
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AllocateDesignerSessionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AllocateDesignerSessionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AllocateDesignerSessionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AllocateDesignerSessionCommand'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AgentSessionDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSessionDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AgentSessionDto'
  /api/Settings:
    post:
      tags:
        - Settings
      operationId: Settings_SetSettings
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateUserParametersCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserParametersCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserParametersCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserParametersCommand'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserParameterDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserParameterDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserParameterDto'
    get:
      tags:
        - Settings
      operationId: Settings_GetSettings
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackendSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BackendSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BackendSettingsDto'
  /api/Settings/GeneralSettings:
    get:
      tags:
        - Settings
      operationId: Settings_GetGeneralSettings
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GeneralSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/GeneralSettingsDto'
  /api/Settings/DesignSettings:
    get:
      tags:
        - Settings
      operationId: Settings_GetDesignSettings
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DesignSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/DesignSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/DesignSettingsDto'
  /api/Settings/FeatureFlags:
    get:
      tags:
        - Settings
      operationId: Settings_GetFeatureFlags
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeatureFlagsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagsDto'
  /api/Settings/TemplateSettings:
    get:
      tags:
        - Settings
      operationId: Settings_GetTemplateSettings
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeatureFlagsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagsDto'
  /api/Settings/RefreshGovernance:
    put:
      tags:
        - Settings
      operationId: Settings_RefreshGovernance
      responses:
        "200":
          description: Success
  /api/ShareProject:
    get:
      tags:
        - ShareProject
      summary: Gets projects shared with the current user
      operationId: ShareProject_GetSharedProjects
      parameters:
        - name: limit
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: skip
          in: query
          schema:
            maximum: 2147483647
            minimum: 0
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
            nullable: true
        - name: sortOrder
          in: query
          schema:
            $ref: '#/components/schemas/SortOrderDto'
      responses:
        "200":
          description: Success
    post:
      tags:
        - ShareProject
      summary: Share the project with a list of users / groups
      operationId: ShareProject_AddProjectShareEntities
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectSharesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSharesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectSharesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectSharesCommand'
      responses:
        "200":
          description: Success
    delete:
      tags:
        - ShareProject
      summary: Remove project shares for a list of users / groups
      operationId: ShareProject_RemoveProjectShareUsers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectSharesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSharesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectSharesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectSharesCommand'
      responses:
        "200":
          description: Success
  /api/ShareProject/Users:
    get:
      tags:
        - ShareProject
      summary: Gets the users that have access to this project.
      operationId: ShareProject_GetUsersShareProject
      parameters:
        - name: projectId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Template:
    get:
      tags:
        - Template
      operationId: Template_GetTemplates
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateDto'
  /api/Template/CreateProjectFromTemplate:
    post:
      tags:
        - Template
      operationId: Template_CreateProjectFromTemplate
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateProjectFromTemplateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectFromTemplateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProjectFromTemplateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProjectFromTemplateCommand'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
  /api/Template/CreateTemplateFromProject:
    post:
      tags:
        - Template
      operationId: Template_CreateTemplate
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCommand'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateDto'
  /api/Template/{templateId}:
    delete:
      tags:
        - Template
      operationId: Template_Delete
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
    patch:
      tags:
        - Template
      operationId: Template_UpdateTemplate
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCommandBase'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCommandBase'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCommandBase'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCommandBase'
      responses:
        "200":
          description: Success
    get:
      tags:
        - Template
      operationId: Template_GetProjectTemplateForEdit
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
  /api/Template/{templateId}/Details:
    get:
      tags:
        - Template
      operationId: Template_GetTemplateDetails
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
  /api/Template/{templateEditId}/Publish:
    post:
      tags:
        - Template
      operationId: Template_PublishTemplateChanges
      parameters:
        - name: templateEditId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TemplateCommandBase'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCommandBase'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateCommandBase'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateCommandBase'
      responses:
        "200":
          description: Success
  /api/Template/SearchTemplates:
    post:
      tags:
        - Template
      operationId: Template_SearchTemplates
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TemplateFilterOptions'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateFilterOptions'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateFilterOptions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateFilterOptions'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateDto'
  /api/Template/{projectId}/Discard:
    patch:
      tags:
        - Template
      operationId: Template_DiscardChanges
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
  /api/Template/{templateId}/Pin:
    post:
      tags:
        - Template
      operationId: Template_AddPinToTemplate
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
    delete:
      tags:
        - Template
      operationId: Template_DeleteTemplatePin
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /api/Tenant:
    get:
      tags:
        - Tenant
      summary: Get the list tenants based on the token and the Orchestrator integration.
      operationId: Tenant_GetTenants
      responses:
        "200":
          description: Success
  /api/UserProfileBinding/{projectId}/UserProfileBindings:
    get:
      tags:
        - UserProfileBinding
      summary: Get the user's profile binding.
      operationId: UserProfileBinding_GetUserProfileBinding
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
      responses:
        "200":
          description: Success
      deprecated: true
    post:
      tags:
        - UserProfileBinding
      summary: Update the user's profile.
      operationId: UserProfileBinding_UpdateUserProfileBindings
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          schema:
            type: string
            description: The id of the project
            format: uuid
        - name: x-UiPath-SW-LockKey
          in: header
          description: ""
          schema:
            type: string
            description: ""
            nullable: true
      requestBody:
        description: The update user profile command
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileBindingsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileBindingsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileBindingsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileBindingsCommand'
      responses:
        "200":
          description: Success
  /api/WorkflowUiStateModel/{workflowId}:
    get:
      tags:
        - WorkflowUiStateModel
      summary: Get the Workflow Ui State.
      operationId: WorkflowUiStateModel_GetWorkflowUiState
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
components:
  schemas:
    RenderType:
      enum:
        - widget
        - variable
        - mapping
        - expression
        - dynamic
      type: string
      x-ms-enum:
        name: RenderType
        modelAsString: false
    BackendPropertyMetadataDto:
      type: object
      properties:
        propertyName:
          type: string
          nullable: true
        renderType:
          $ref: '#/components/schemas/RenderType'
        widget:
          type: string
          nullable: true
      additionalProperties: false
    BackendActivityMetadataDto:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        activityIdRef:
          type: string
          nullable: true
        isCollapsed:
          type: boolean
        isEnabled:
          type: boolean
        requiresConfiguration:
          type: boolean
        propertiesBackendMetadata:
          type: array
          items:
            $ref: '#/components/schemas/BackendPropertyMetadataDto'
          nullable: true
      additionalProperties: false
    DeleteActivitiesMetadataCommand:
      type: object
      properties:
        activityIdRefs:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UserPreferencesDto:
      type: object
      properties:
        departments:
          type: array
          items:
            type: string
          nullable: true
        connectors:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OrganizationDeleteCommand:
      type: object
      properties:
        callbackUrl:
          type: string
          nullable: true
        organizationId:
          type: string
          format: uuid
        deletionTime:
          type: string
          format: date-time
        isHardDelete:
          type: boolean
      additionalProperties: false
    AccessStatus:
      enum:
        - notConfigured
        - allowed
        - subscribed
      type: string
      x-ms-enum:
        name: AccessStatus
        modelAsString: false
    UpdateUserAccessStatusCommand:
      type: object
      properties:
        userAccessStatus:
          $ref: '#/components/schemas/AccessStatus'
      additionalProperties: false
    SortOrderDto:
      enum:
        - asc
        - desc
      type: string
      x-ms-enum:
        name: SortOrderDto
        modelAsString: false
    ProjectStatus:
      enum:
        - ready
        - error
        - processing
        - templateEditing
      type: string
      x-ms-enum:
        name: ProjectStatus
        modelAsString: false
    MetadataConnectionDto:
      type: object
      properties:
        connectionId:
          type: string
          nullable: true
        connector:
          type: string
          nullable: true
      additionalProperties: false
    MetadataTriggerDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MetadataConnectionDto'
        operation:
          type: string
          nullable: true
        triggerId:
          type: string
          nullable: true
        defaultDisplayName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    FileType:
      enum:
        - otherType
        - workflow
        - testCase
      type: string
      x-ms-enum:
        name: FileType
        modelAsString: false
    FileDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isMain:
          type: boolean
        fileType:
          $ref: '#/components/schemas/FileType'
        isEntryPoint:
          type: boolean
        ignoredFromPublish:
          type: boolean
      additionalProperties: false
    SpecialFolderType:
      enum:
        - regular
        - screenShot
        - entities
        - local
        - project
        - testData
        - templates
        - mocks
      type: string
      x-ms-enum:
        name: SpecialFolderType
        modelAsString: false
    FolderDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        folders:
          type: array
          items:
            $ref: '#/components/schemas/FolderDto'
          nullable: true
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileDto'
          nullable: true
        folderType:
          $ref: '#/components/schemas/SpecialFolderType'
      additionalProperties: false
    PackageDto:
      required:
        - name
        - version
      type: object
      properties:
        name:
          type: string
        version:
          type: string
      additionalProperties: false
    WorkflowUiStateDto:
      type: object
      properties:
        workflowId:
          type: string
          format: uuid
        json:
          type: string
          nullable: true
        projectId:
          type: string
          format: uuid
      additionalProperties: false
    ProjectDto:
      type: object
      properties:
        id:
          type: string
          description: The Id of the project
          format: uuid
        expressionLanguage:
          type: string
          description: 'The project language: CSharp or VisualBasic'
          nullable: true
        projectType:
          type: string
          description: 'The project type: Process, Library Tests'
          nullable: true
        name:
          type: string
          description: The name of the project.
          nullable: true
        description:
          type: string
          description: The description of the project.
          nullable: true
        status:
          $ref: '#/components/schemas/ProjectStatus'
        message:
          type: string
          description: The message to be displayed to the user.
          nullable: true
        lastModifiedTime:
          type: string
          description: Last time when project was modified.
          format: date-time
        pinDate:
          type: string
          description: The date of when the project was pinned.
          format: date-time
          nullable: true
        triggerType:
          type: string
          description: The trigger type of the project
          nullable: true
        trigger:
          $ref: '#/components/schemas/MetadataTriggerDto'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/MetadataConnectionDto'
          description: The metadata of the project containing connections information.
          nullable: true
        lockedBy:
          type: string
          description: "The UserId which obtained the lock \r\nIf no lock or lock expired => null"
          nullable: true
        isSharedByMe:
          type: boolean
        isSharedWithMe:
          type: boolean
        ownerId:
          type: string
          nullable: true
        creationTime:
          type: string
          description: Datatime when the project was created.
          format: date-time
        userId:
          type: string
          description: The id of the user who created the project.
          nullable: true
        rootFolder:
          $ref: '#/components/schemas/FolderDto'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/PackageDto'
          description: The list of the dependencies for this project (project.json dependencies).
          nullable: true
        uiStateWorkflows:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowUiStateDto'
          nullable: true
        hasTrigger:
          type: boolean
        disableAutoUpdate:
          type: boolean
        userAccessStatus:
          $ref: '#/components/schemas/AccessStatus'
        hasUnsavedEdits:
          type: boolean
          description: Field used for the template state
        projectJson:
          type: string
          description: The project.json content
          nullable: true
      additionalProperties: false
      description: The full description of a project
    ProjectTemplateType:
      enum:
        - blank
        - outlook
      type: string
      x-ms-enum:
        name: ProjectTemplateType
        modelAsString: false
    TriggerType:
      enum:
        - unknown
        - manual
        - time
        - integrated
        - system
      type: string
      x-ms-enum:
        name: TriggerType
        modelAsString: false
    CreateProjectCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        expressionLanguage:
          type: string
          nullable: true
        projectType:
          type: string
          nullable: true
        templateType:
          $ref: '#/components/schemas/ProjectTemplateType'
        triggerType:
          $ref: '#/components/schemas/TriggerType'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/PackageDto'
          nullable: true
      additionalProperties: false
    PreviewProjectDto:
      type: object
      properties:
        id:
          type: string
          description: The Id of the project
          format: uuid
        expressionLanguage:
          type: string
          description: 'The project language: CSharp or VisualBasic'
          nullable: true
        projectType:
          type: string
          description: 'The project type: Process, Library Tests'
          nullable: true
        name:
          type: string
          description: The name of the project.
          nullable: true
        description:
          type: string
          description: The description of the project.
          nullable: true
        status:
          $ref: '#/components/schemas/ProjectStatus'
        message:
          type: string
          description: The message to be displayed to the user.
          nullable: true
        lastModifiedTime:
          type: string
          description: Last time when project was modified.
          format: date-time
        pinDate:
          type: string
          description: The date of when the project was pinned.
          format: date-time
          nullable: true
        triggerType:
          type: string
          description: The trigger type of the project
          nullable: true
        trigger:
          $ref: '#/components/schemas/MetadataTriggerDto'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/MetadataConnectionDto'
          description: The metadata of the project containing connections information.
          nullable: true
        lockedBy:
          type: string
          description: "The UserId which obtained the lock \r\nIf no lock or lock expired => null"
          nullable: true
        isSharedByMe:
          type: boolean
        isSharedWithMe:
          type: boolean
        ownerId:
          type: string
          nullable: true
      additionalProperties: false
      description: A project with a subset of his properties.
    UpdateProjectCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        supportsPersistence:
          type: boolean
          nullable: true
      additionalProperties: false
    SavedNameDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    UpdateXamlFileCommand:
      type: object
      properties:
        content:
          type: string
          nullable: true
        uiJson:
          type: string
          nullable: true
        metadata:
          type: string
          nullable: true
      additionalProperties: false
    UpdateProjectDependenciesCommand:
      type: object
      properties:
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/PackageDto'
          description: The list of new dependencies for this project (project.json dependencies).
          nullable: true
      additionalProperties: false
    UnloadProjectCommand:
      required:
        - accessToken
        - lockKey
      type: object
      properties:
        lockKey:
          maxLength: 64
          type: string
        accessToken:
          type: string
      additionalProperties: false
    UserProfileApplyResult:
      enum:
        - profileAlreayApplied
        - profileApplied
        - userProfileNull
      type: string
      x-ms-enum:
        name: UserProfileApplyResult
        modelAsString: false
    ProfileBindingsAppliedResult:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/UserProfileApplyResult'
      additionalProperties: false
    CreateWorkflowCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
      additionalProperties: false
    RenameWorkflowCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        workflowId:
          type: string
          nullable: true
      additionalProperties: false
    CreateFolderCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        parentFolderId:
          type: string
          nullable: true
      additionalProperties: false
    RenameFolderCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        folderId:
          type: string
          nullable: true
      additionalProperties: false
    LockProjectCommand:
      required:
        - lockKey
      type: object
      properties:
        lockKey:
          maxLength: 64
          type: string
        lockName:
          type: string
          nullable: true
          deprecated: true
      additionalProperties: false
    WatchedExpression:
      type: object
      properties:
        id:
          type: string
          nullable: true
        expression:
          type: string
          nullable: true
      additionalProperties: false
    ProjectWatches:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/WatchedExpression'
          nullable: true
      additionalProperties: false
    ProjectSettings:
      type: object
      properties:
        projectWatches:
          $ref: '#/components/schemas/ProjectWatches'
      additionalProperties: false
    ArgumentDirection:
      enum:
        - in
        - out
        - inOut
      type: string
      x-ms-enum:
        name: ArgumentDirection
        modelAsString: false
    WorkflowArgumentInfo:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        direction:
          $ref: '#/components/schemas/ArgumentDirection'
        required:
          type: boolean
        hasDefault:
          type: boolean
        defaultValue:
          type: string
          nullable: true
        annotation:
          type: string
          nullable: true
      additionalProperties: false
    InstallDependencyCompletedCommand:
      type: object
      properties:
        projectId:
          type: string
          format: uuid
        userId:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    RoleAssignmentCommand:
      type: object
      properties:
        roleIdentifiers:
          type: array
          items:
            type: string
          nullable: true
        targetGuid:
          type: string
          format: uuid
        isGroupAssignment:
          type: boolean
      additionalProperties: false
    GrantDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
        isAssignable:
          type: boolean
      additionalProperties: false
    RoleDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        grants:
          type: array
          items:
            $ref: '#/components/schemas/GrantDto'
          nullable: true
        isAssignable:
          type: boolean
        identifier:
          type: string
          nullable: true
      additionalProperties: false
    EntityRolesDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleDto'
          nullable: true
        isGroup:
          type: boolean
      additionalProperties: false
    EntityRolesResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EntityRolesDto'
          nullable: true
        hasNext:
          type: boolean
      additionalProperties: false
    ScheduleType:
      enum:
        - manually
        - scheduled
        - eventBased
      type: string
      x-ms-enum:
        name: ScheduleType
        modelAsString: false
    Frequencies:
      enum:
        - minutely
        - hourly
        - daily
        - weekly
        - monthly
      type: string
      x-ms-enum:
        name: Frequencies
        modelAsString: false
    ScheduleData:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/Frequencies'
        atMinute:
          type: integer
          format: int32
          nullable: true
        atHour:
          type: integer
          format: int32
          nullable: true
        onDays:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        onMonths:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ScheduleDto:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ScheduleType'
        data:
          $ref: '#/components/schemas/ScheduleData'
      additionalProperties: false
    AllocateRobotSessionCommand:
      required:
        - allowRemoteControl
        - personalWorkspaceId
        - sessionId
      type: object
      properties:
        sessionId:
          type: string
        personalWorkspaceId:
          type: integer
          format: int64
        allowRemoteControl:
          type: boolean
      additionalProperties: false
    AgentSessionDto:
      type: object
      properties:
        agentSessionEnqueued:
          type: integer
          format: int64
        vncTunnelUri:
          type: string
          nullable: true
      additionalProperties: false
    AllocateDesignerSessionCommand:
      required:
        - controlPlaneSessionId
        - personalWorkspaceId
        - sessionId
      type: object
      properties:
        controlPlaneSessionId:
          type: string
        sessionId:
          type: string
        personalWorkspaceId:
          type: integer
          format: int64
      additionalProperties: false
    UserParameterDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        jsonValue:
          type: string
          nullable: true
      additionalProperties: false
    UpdateUserParametersCommand:
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/UserParameterDto'
          nullable: true
      additionalProperties: false
    BooleanGovernedParameterDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        value:
          type: boolean
        allowEdit:
          type: boolean
      additionalProperties: false
    StringGovernedParameterDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        allowEdit:
          type: boolean
      additionalProperties: false
    GeneralSettingsDto:
      type: object
      properties:
        telemetryEnabled:
          $ref: '#/components/schemas/BooleanGovernedParameterDto'
        language:
          $ref: '#/components/schemas/StringGovernedParameterDto'
        theme:
          $ref: '#/components/schemas/StringGovernedParameterDto'
      additionalProperties: false
    DesignSettingsDto:
      type: object
      properties:
        createDockedAnnotations:
          $ref: '#/components/schemas/BooleanGovernedParameterDto'
      additionalProperties: false
    FeatureFlagsDto:
      type: object
      properties:
        allowFeedback:
          $ref: '#/components/schemas/BooleanGovernedParameterDto'
        allowImportProject:
          $ref: '#/components/schemas/BooleanGovernedParameterDto'
        autoUpdateProject:
          $ref: '#/components/schemas/BooleanGovernedParameterDto'
        allowPublishOutsidePersonalWorkspace:
          $ref: '#/components/schemas/BooleanGovernedParameterDto'
      additionalProperties: false
    TemplateSettingsDto:
      type: object
      properties:
        allowOfficialTemplatesFeed:
          $ref: '#/components/schemas/BooleanGovernedParameterDto'
      additionalProperties: false
    BackendSettingsDto:
      type: object
      properties:
        generalSettings:
          $ref: '#/components/schemas/GeneralSettingsDto'
        designSettings:
          $ref: '#/components/schemas/DesignSettingsDto'
        featureFlags:
          $ref: '#/components/schemas/FeatureFlagsDto'
        templateSettings:
          $ref: '#/components/schemas/TemplateSettingsDto'
      additionalProperties: false
    ProjectShareEntityDto:
      type: object
      properties:
        id:
          type: string
          description: The id of the entity (user or group) to share the project
          format: uuid
        entityName:
          type: string
          description: The entity name for directory in Identity Server
          nullable: true
        isGroup:
          type: boolean
          description: Flag to check if the entity is a group
      additionalProperties: false
    ProjectSharesCommand:
      type: object
      properties:
        projectId:
          type: string
          description: The id of the project to be shared
          format: uuid
        entities:
          type: array
          items:
            $ref: '#/components/schemas/ProjectShareEntityDto'
          description: The entities to share the project
          nullable: true
      additionalProperties: false
    TemplateScopeDto:
      enum:
        - system
        - organization
        - user
      type: string
      x-ms-enum:
        name: TemplateScopeDto
        modelAsString: false
    TemplateTriggerDto:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
        connector:
          type: string
          nullable: true
      additionalProperties: false
    TemplateDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        connectors:
          type: array
          items:
            type: string
          nullable: true
        scope:
          $ref: '#/components/schemas/TemplateScopeDto'
        isGettingStarted:
          type: boolean
        hasPrivilegedAccess:
          type: boolean
        tags:
          type: array
          items:
            type: string
          nullable: true
        timesUsed:
          type: integer
          format: int64
        triggerType:
          type: string
          nullable: true
        trigger:
          $ref: '#/components/schemas/TemplateTriggerDto'
        pinDate:
          type: string
          format: date-time
          nullable: true
        organizationId:
          type: string
          format: uuid
      additionalProperties: false
    ResourceBinding:
      type: object
      properties:
        resourceType:
          type: string
          nullable: true
        resourceKey:
          type: string
          nullable: true
        entityId:
          type: string
          nullable: true
        properties:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    CreateProjectFromTemplateCommand:
      type: object
      properties:
        templateId:
          type: string
          format: uuid
        projectName:
          type: string
          nullable: true
        projectDescription:
          type: string
          nullable: true
        resourceBindings:
          type: array
          items:
            $ref: '#/components/schemas/ResourceBinding'
          nullable: true
      additionalProperties: false
    CreateTemplateCommand:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bindingsJson:
          type: string
          nullable: true
        connectors:
          type: array
          items:
            type: string
          nullable: true
        scope:
          $ref: '#/components/schemas/TemplateScopeDto'
        tags:
          type: array
          items:
            type: string
          nullable: true
        projectId:
          type: string
          format: uuid
      additionalProperties: false
    CreateTemplateCommandBase:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bindingsJson:
          type: string
          nullable: true
        connectors:
          type: array
          items:
            type: string
          nullable: true
        scope:
          $ref: '#/components/schemas/TemplateScopeDto'
        tags:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TemplateCommandBase:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bindingsJson:
          type: string
          nullable: true
      additionalProperties: false
    PagingOptions:
      type: object
      properties:
        limit:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
      additionalProperties: false
    TemplateFilterOptions:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        connectors:
          type: array
          items:
            type: string
          nullable: true
        paging:
          $ref: '#/components/schemas/PagingOptions'
      additionalProperties: false
    PropertyBindingDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        profileId:
          type: integer
          format: int64
        workflowId:
          type: string
          format: uuid
        activityIdRef:
          type: string
          nullable: true
        propertyName:
          type: string
          nullable: true
        contractName:
          type: string
          nullable: true
        resourceKey:
          type: string
          nullable: true
        propertyValue:
          type: string
          nullable: true
      additionalProperties: false
    UpdateUserProfileBindingsCommand:
      type: object
      properties:
        modifiedBindings:
          type: array
          items:
            $ref: '#/components/schemas/PropertyBindingDto'
          nullable: true
        deletedBindings:
          type: array
          items:
            $ref: '#/components/schemas/PropertyBindingDto'
          nullable: true
        workflowId:
          type: string
          format: uuid
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'JWT Authorization header using the Bearer scheme. Example: "Bearer {token}"'
      name: Authorization
      in: header
security:
  - Bearer: []
