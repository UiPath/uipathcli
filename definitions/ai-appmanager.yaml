openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://cloud.uipath.com/{organization}/{tenant}/aifabric_/ai-appmanager
  description: The production url
  variables:
    organization:
      description: The organization name (or id)
      default: my-org
    tenant:
      description: The tenant name (or id)
      default: my-tenant
paths:
  /v1/app/{appId}/files/{fileId}/status:
    get:
      tags:
        - import-controller
      operationId: getLabellingFileStatus
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          description: 'Expected: project Id'
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
        - name: fileId
          in: path
          description: 'Expected: File Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseLabellingFileStatusDto'
    put:
      tags:
        - import-controller
      operationId: setLabellingFileStatus
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          description: 'Expected: project Id'
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
        - name: fileId
          in: path
          description: 'Expected: File Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabellingFileStatusRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
  /v1/app/template/{appId}:
    get:
      tags:
        - labelling-template-controller
      operationId: getLabellingTemplate
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: project-id
          in: header
          description: 'Expected: ProjectId of the One who''s creating dataset'
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: user Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseLabellingAppTemplateDto'
    put:
      tags:
        - labelling-template-controller
      operationId: updateLabellingTemplate
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: project-id
          in: header
          description: 'Expected: ProjectId of the One who''s creating dataset'
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: Template Id'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabellingAppTemplateRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
  /v1/tenant/status:
    post:
      tags:
        - tenant-controller
      operationId: updateTenantStatusSessionInDataManager
      parameters:
        - name: account-id
          in: header
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantStatusUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
  /v1/app:
    get:
      tags:
        - app-controller
      description: 'Fetch list of services '
      operationId: getApps_1
      parameters:
        - name: account-id
          in: header
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: false
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
        - name: projectId
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - DATA_MANAGER
                - DATA_MANAGER_SAAS
                - LABEL_BOX
            default: []
        - name: includedAppStatuses
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - QUEUED
                - DEPLOYING
                - AVAILABLE
                - FAILED
                - ERROR
                - STOPPED
                - STARTING
                - PURGING
                - PURGED
                - EXPORTING_DATASET
                - STOPPING
            default: []
        - name: excludedAppStatuses
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - QUEUED
                - DEPLOYING
                - AVAILABLE
                - FAILED
                - ERROR
                - STOPPED
                - STARTING
                - PURGING
                - PURGED
                - EXPORTING_DATASET
                - STOPPING
            default:
              - PURGED
        - name: pageNum
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: name
        - name: name
          in: query
          required: false
          schema:
            type: string
            default: ''
        - name: exactMatchOnName
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: sortOrder
          in: query
          required: false
          schema:
            type: string
            default: ASC
      responses:
        '200':
          description: Services retrieved successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponsePageListingDtoAppDto'
        '404':
          description: The resource you were trying to reach is not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponsePageListingDtoAppDto'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponsePageListingDtoAppDto'
    post:
      tags:
        - app-controller
      description: 'Provision app/external tool session '
      operationId: provisionAppSession
      parameters:
        - name: account-id
          in: header
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppProvisionDto'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseAppDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseAppDto'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseAppDto'
  /v1/app/{appId}/files:
    get:
      tags:
        - import-controller
      operationId: getAllLabellingFiles
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          description: 'Expected: project Id'
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
        - name: labellingStatuses
          in: query
          description: 'Expected: List of labelling statuses'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
        - name: pageNum
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: name
        - name: sortOrder
          in: query
          required: false
          schema:
            type: string
            default: ASC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponsePageListingDtoLabellingFileDto'
    post:
      tags:
        - import-controller
      operationId: importLabellingFile
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          description: 'Expected: project Id'
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabellingFileRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseLabellingFileDto'
    delete:
      tags:
        - import-controller
      operationId: deleteFile
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: user Id'
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          description: 'Expected: project Id'
          required: true
          schema:
            type: string
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: datasetId
          in: query
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
  /v1/app/task/{appId}:
    post:
      tags:
        - action-task-controller
      operationId: createActionTask
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: user Id'
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          description: 'Expected: project Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
  /v1/app/task/{appId}/activity:
    post:
      tags:
        - action-task-controller
      operationId: createActivityActionTask
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: user Id'
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          description: 'Expected: project Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
        - name: OrchAccessToken
          in: header
          required: false
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseOrchestratorTaskCreateResponseDto'
  /v1/permission:
    get:
      tags:
        - permission-controller
      description: Check user action is allowed
      operationId: isValidAction
      parameters:
        - name: account-id
          in: header
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: false
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
        - name: projectId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: User action is allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseBoolean'
        '403':
          description: User action not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseBoolean'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseBoolean'
  /v1/oobtemplates:
    get:
      tags:
        - labelling-oob-template-controller
      operationId: getLabellingOobTemplates
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: project-id
          in: header
          description: 'Expected: ProjectId of the One who''s creating dataset'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: UserId'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseListLabellingOobTemplateDto'
  /v1/oobtemplates/{oobtemplateId}:
    get:
      tags:
        - labelling-oob-template-controller
      operationId: getLabellingOobTemplate
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: project-id
          in: header
          description: 'Expected: ProjectId of the One who''s creating dataset'
          required: true
          schema:
            type: string
        - name: oobtemplateId
          in: path
          description: 'Expected: OOB Template Id'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: User Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseLabellingOobTemplateDto'
  /v1/labellingfiles/stats/{appId}:
    get:
      tags:
        - labelling-file-controller
      operationId: getLabellingFileStats
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: user Id'
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          description: 'Expected: project Id'
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: 'Expected: App Id'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseMapLabellingFileStatusLong'
  /v1/dataset/{datasetId}/apps:
    get:
      tags:
        - dataset-controller
      operationId: getApps
      parameters:
        - name: account-id
          in: header
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          required: true
          schema:
            type: string
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request processed successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseListAppDto'
        '400':
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseListAppDto'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseListAppDto'
  /v1/app/task/folders:
    get:
      tags:
        - action-task-controller
      operationId: getFoldersInTenantForUser
      parameters:
        - name: account-id
          in: header
          description: 'Expected: AccountId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          description: 'Expected: TenantId of the One who''s updating project'
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          description: 'Expected: user Id'
          required: true
          schema:
            type: string
        - name: authorization
          in: header
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseOrchestratorFoldersDto[]'
  /v1/app/{appId}:
    delete:
      tags:
        - app-controller
      description: Delete app resource
      operationId: deleteResource
      parameters:
        - name: account-id
          in: header
          required: true
          schema:
            type: string
        - name: tenant-id
          in: header
          required: true
          schema:
            type: string
        - name: user-id
          in: header
          required: false
          schema:
            type: string
        - name: authorization
          in: header
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
            default: DATA_MANAGER
            enum:
              - DATA_MANAGER
              - DATA_MANAGER_SAAS
              - LABEL_BOX
        - name: appId
          in: path
          description: 'Expected: UUID string corresponding to Service entry'
          required: true
          schema:
            type: string
        - name: projectId
          in: query
          required: true
          schema:
            type: string
      responses:
        '202':
          description: App deletion request submitted successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
        '400':
          description: App cannot be deleted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
        '404':
          description: App is not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseString'
components:
  schemas:
    LabellingFileStatusRequestDto:
      required:
        - labellingFileStatus
      type: object
      properties:
        labellingFileStatus:
          type: string
          enum:
            - VALIDATION_FAILED
            - UPLOAD_SUCCESS
            - PUSH_PENDING
            - PUSH_SUCCESS
            - PUSH_FAILED
            - LABEL_SUCCESS
      description: 'Expected: LabellingFileStatusRequestDto'
    BaseResponseString:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          type: string
    LabellingAppTemplateRequestDto:
      required:
        - template
      type: object
      properties:
        template:
          type: string
          description: Template data
      description: 'Expected: Labelling app template'
    TenantStatusUpdateDto:
      type: object
      properties:
        accountName:
          type: string
        tenantName:
          type: string
        tenantId:
          type: string
        isTenantEnabled:
          type: boolean
          writeOnly: true
        tenantEnabled:
          type: boolean
    AppDeployDto:
      required:
        - exportedDatasetId
        - name
        - type
      type: object
      properties:
        name:
          type: string
          description: 'Expected: String. Name of the app to be provisioned.'
        type:
          type: string
          description: 'Expected: Enum. Type of app to provision.'
          enum:
            - DATA_MANAGER
            - DATA_MANAGER_SAAS
            - LABEL_BOX
        exportedDatasetId:
          type: string
          description: 'Expected: UUID. Exported dataset Id.'
        labellingOobTemplateId:
          type: string
          description: 'Expected: UUID. Labelling OOB template Id.'
      description: 'Expected: Object. Type of app provisioning payload.'
    AppProvisionDto:
      required:
        - appPayload
      type: object
      properties:
        projectId:
          type: string
          description: 'Expected: UUID. Project-Key / Project-ID for provisioning app'
        appPayload:
          $ref: '#/components/schemas/AppDeployDto'
    AppDto:
      required:
        - accessUri
        - appStatus
        - exportedDatasetId
        - name
        - projectId
        - type
      type: object
      properties:
        id:
          type: string
        createdBy:
          maxLength: 50
          minLength: 0
          type: string
        modifiedBy:
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          maxLength: 36
          minLength: 0
          type: string
        tenantId:
          maxLength: 36
          minLength: 0
          type: string
        organizationId:
          maxLength: 36
          minLength: 0
          type: string
        createdOn:
          type: string
          format: date-time
        modifiedOn:
          type: string
          format: date-time
        name:
          type: string
          description: Name of an app
        projectId:
          type: string
          description: Project Id, where app is deployed
        exportedDatasetId:
          type: string
          description: Id for exported dataset
        type:
          type: string
          description: 'Type of application: example Data_manager'
          enum:
            - DATA_MANAGER
            - DATA_MANAGER_SAAS
            - LABEL_BOX
        appStatus:
          type: string
          description: App status
          enum:
            - QUEUED
            - DEPLOYING
            - AVAILABLE
            - FAILED
            - ERROR
            - STOPPED
            - STARTING
            - PURGING
            - PURGED
            - EXPORTING_DATASET
            - STOPPING
        accessUri:
          type: string
          description: Url for accessing APP.
        accessedOn:
          type: string
          description: Last accessed time of APP
          format: date-time
    BaseResponseAppDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          $ref: '#/components/schemas/AppDto'
    LabellingFileRequestDto:
      required:
        - accessUri
        - fileName
      type: object
      properties:
        fileName:
          maxLength: 50
          minLength: 0
          type: string
          description: Labelling file name
        accessUri:
          type: string
          description: Access uri of the labelling file
      description: 'Expected: LabellingFileRequestDto'
    BaseResponseLabellingFileDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          $ref: '#/components/schemas/LabellingFileDto'
    LabellingFileDto:
      required:
        - accessUri
        - fileName
        - fileNameV2
        - labellingAppId
        - labellingFileStatus
      type: object
      properties:
        id:
          type: string
        createdBy:
          maxLength: 50
          minLength: 0
          type: string
        modifiedBy:
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          maxLength: 36
          minLength: 0
          type: string
        tenantId:
          maxLength: 36
          minLength: 0
          type: string
        organizationId:
          maxLength: 36
          minLength: 0
          type: string
        createdOn:
          type: string
          format: date-time
        modifiedOn:
          type: string
          format: date-time
        labellingFileStatus:
          type: string
          enum:
            - VALIDATION_FAILED
            - UPLOAD_SUCCESS
            - PUSH_PENDING
            - PUSH_SUCCESS
            - PUSH_FAILED
            - LABEL_SUCCESS
        fileName:
          type: string
        fileNameV2:
          type: string
        labellingAppId:
          type: string
        accessUri:
          type: string
          description: Access uri of the labelling file
    TaskCreateRequestDto:
      type: object
      properties:
        fileIds:
          type: array
          items:
            type: string
        allFiles:
          type: boolean
        allUnlabelledFiles:
          type: boolean
        organizationUnitId:
          type: integer
          format: int64
    BaseResponseOrchestratorTaskCreateResponseDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          $ref: '#/components/schemas/OrchestratorTaskCreateResponseDto'
    OrchestratorTaskCreateResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
        action:
          type: string
        waitJobState:
          type: string
        organizationUnitFullyQualifiedName:
          type: string
        title:
          type: string
        type:
          type: string
        priority:
          type: string
          enum:
            - Low
            - Medium
            - High
            - Critical
        data:
          type: object
          additionalProperties:
            type: string
        assignedToUserId:
          type: string
        organizationUnitId:
          type: integer
          format: int64
        externalTag:
          type: string
        creatorJobKey:
          type: string
        waitJobKey:
          type: string
        deleterUserId:
          type: string
        lastModifierUserId:
          type: string
        creatorUserId:
          type: string
        deleted:
          type: boolean
    BaseResponseBoolean:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          type: boolean
    BaseResponseListLabellingOobTemplateDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/LabellingOobTemplateDto'
    LabellingOobTemplateDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        template:
          type: string
    BaseResponseLabellingOobTemplateDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          $ref: '#/components/schemas/LabellingOobTemplateDto'
    BaseResponseMapLabellingFileStatusLong:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          type: object
          additionalProperties:
            type: integer
            format: int64
    BaseResponseListAppDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/AppDto'
    BaseResponsePageListingDtoAppDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          $ref: '#/components/schemas/PageListingDtoAppDto'
    PageListingDtoAppDto:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
        pageNum:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int64
        dataList:
          type: array
          items:
            $ref: '#/components/schemas/AppDto'
    BaseResponsePageListingDtoLabellingFileDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          $ref: '#/components/schemas/PageListingDtoLabellingFileDto'
    PageListingDtoLabellingFileDto:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
        pageNum:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int64
        dataList:
          type: array
          items:
            $ref: '#/components/schemas/LabellingFileDto'
    BaseResponseLabellingFileStatusDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          $ref: '#/components/schemas/LabellingFileStatusDto'
    LabellingFileStatusDto:
      required:
        - labellingFileStatus
      type: object
      properties:
        labellingFileStatus:
          type: string
          enum:
            - VALIDATION_FAILED
            - UPLOAD_SUCCESS
            - PUSH_PENDING
            - PUSH_SUCCESS
            - PUSH_FAILED
            - LABEL_SUCCESS
    BaseResponseLabellingAppTemplateDto:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          $ref: '#/components/schemas/LabellingAppTemplateDto'
    LabellingAppTemplateDto:
      type: object
      properties:
        template:
          type: string
    BaseResponseOrchestratorFoldersDto[]:
      type: object
      properties:
        respCode:
          type: integer
          format: int32
        respMsg:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrchestratorFoldersDto'
    OrchestratorFoldersDto:
      type: object
      properties:
        Key:
          type: string
        DisplayName:
          type: string
        FullyQualifiedName:
          type: string
        FullyQualifiedNameOrderable:
          type: string
        Description:
          type: string
        ProvisionType:
          type: string
        PermissionModel:
          type: string
        ParentId:
          type: string
        ParentKey:
          type: string
        IsActive:
          type: boolean
        FeedType:
          type: string
        Id:
          type: integer
          format: int64
